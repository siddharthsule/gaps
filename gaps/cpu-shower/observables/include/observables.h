#ifndef observables_h_
#define observables_h_

#include "event.h"
#include "histogram.h"

// add analyses here
#include "eventshapes.h"
#include "jets.h"

class analysis {
  /**
   * @class analysis
   * @brief analysis of the observables
   *
   * this class is used to analyse the observables generated by the shower
   * and calculate the necessary histograms for the rivet analysis[1]
   *
   * [1] rivet: https://rivet.hepforge.org/
   */

 public:
  // ---------------------------------------------------------------------------
  // member variables

  histo1d hists[10];

  double wtot;  // scale by weight for 1/sigma d(sigma)/d observable
  double ntot;  // scale by number for d(sigma)/d observable

  // ---------------------------------------------------------------------------
  // constructor

  analysis() : wtot(0.), ntot(0.) {
    // jet rates and event shapes
    hists[0] = histo1d(-4.3, -0.3, "/gaps/log10y23\n");
    hists[1] = histo1d(-4.3, -0.3, "/gaps/log10y34\n");
    hists[2] = histo1d(-4.3, -0.3, "/gaps/log10y45\n");
    hists[3] = histo1d(-4.3, -0.3, "/gaps/log10y56\n");
    hists[4] = histo1d(0., 0.5, "/gaps/tvalue\n");
    hists[5] = histo1d(0., 0.5, "/gaps/tzoomd\n");
    hists[6] = histo1d(0., 1., "/gaps/hjm\n");
    hists[7] = histo1d(0., 0.5, "/gaps/ljm\n");
    hists[8] = histo1d(0., 0.5, "/gaps/wjb\n");
    hists[9] = histo1d(0., 0.2, "/gaps/njb\n");
  }

  // ---------------------------------------------------------------------------
  // member functions

  void validate(event& ev);
  void analyze(const event& ev);
  void finalize(const std::string& filename);
};

#endif  // observables_h_